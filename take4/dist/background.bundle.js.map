{"version":3,"file":"background.bundle.js","mappings":"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","sources":["webpack://chrome-extension-boilerplate/webpack/bootstrap","webpack://chrome-extension-boilerplate/webpack/runtime/define property getters","webpack://chrome-extension-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-boilerplate/webpack/runtime/make namespace object","webpack://chrome-extension-boilerplate/./src/background.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Message, MessageBroker, PortConnection } from \"./types\";\nimport { BrokerClient } from \"./client\";\n\nclass MessageBrokerImpl implements MessageBroker {\n  connections: Map<string, PortConnection>;\n\n  constructor() {\n    this.connections = new Map();\n    chrome.runtime.onConnect.addListener(this.addConnection.bind(this));\n  }\n\n  generateConnectionKey(\n    tabId: number | undefined,\n    frameId: number | undefined,\n    portName: string\n  ): string {\n    const sanitizedTabId = tabId !== undefined ? tabId : -1;\n    const sanitizedFrameId = frameId !== undefined ? frameId : -1;\n    return `${sanitizedTabId}_${sanitizedFrameId}_${portName}`;\n  }\n\n  addConnection(port: chrome.runtime.Port): void {\n    const portConnection: PortConnection = {\n      port,\n      subscriptions: new Set(),\n    };\n\n    const connectionKey = this.generateConnectionKey(\n      port.sender?.tab?.id,\n      port.sender?.frameId,\n      port.name\n    );\n    this.connections.set(connectionKey, portConnection);\n\n    port.onDisconnect.addListener(() => this.removeConnection(connectionKey));\n    port.onMessage.addListener((message: Message) =>\n      this.onMessage(connectionKey, message)\n    );\n  }\n\n  removeConnection(connectionKey: string): void {\n    this.connections.delete(connectionKey);\n  }\n\n  onMessage(connectionKey: string, message: Message): void {\n    switch (message.type) {\n      case \"SUBSCRIBE\":\n        this.subscribe(connectionKey, message.payload);\n        break;\n      case \"UNSUBSCRIBE\":\n        this.unsubscribe(connectionKey, message.payload);\n        break;\n      default:\n        this.dispatchMessage(message.type, message.payload, connectionKey);\n        break;\n    }\n  }\n\n  dispatchMessage(type: string, payload: any, _senderPortId: string): void {\n    console.log(\"dispatchMessage\");\n    for (const [_portId, connection] of this.connections.entries()) {\n      console.log(\n        \"connection.subscriptions.has(type)\",\n        connection.subscriptions.has(type),\n        connection\n      );\n      if (\n        connection.subscriptions.has(type) ||\n        connection.subscriptions.has(\"*\")\n      ) {\n        connection.port.postMessage({\n          type,\n          payload,\n          tabId: Number.parseInt(_portId.split(\"_\")[0]),\n        });\n      }\n    }\n  }\n\n  subscribe(connectionKey: string, messageType: string): void {\n    const connection = this.connections.get(connectionKey);\n    if (connection) {\n      connection.subscriptions.add(messageType);\n    }\n  }\n\n  unsubscribe(connectionKey: string, messageType: string): void {\n    const connection = this.connections.get(connectionKey);\n    if (connection) {\n      connection.subscriptions.delete(messageType);\n    }\n  }\n}\nexport { MessageBrokerImpl as MessageBroker };\n\n// Initialize the message broker in the background script\nif (chrome.runtime.id) {\n  const broker = new MessageBrokerImpl();\n  function detachOnTabClose(tabId: number) {\n    chrome.tabs.onRemoved.addListener((closedTabId) => {\n      if (closedTabId === tabId) {\n        chrome.debugger.detach({ tabId: tabId });\n      }\n    });\n  }\n\n  function onRequestWillBeSent(source: any, method: any, params: any) {\n    if (method === \"Network.requestWillBeSent\") {\n      console.log(\"Request will be sent:\", params.request);\n    }\n  }\n\n  const responseMap = new Map();\n\n  function onResponseReceived(source: any, method: any, params: any) {\n    if (method === \"Network.responseReceived\") {\n      console.log(\"Response received:\", params.response);\n      responseMap.set(params.requestId, params.response);\n    }\n  }\n\n  function onLoadingFinished(source: any, method: any, params: any) {\n    if (method === \"Network.loadingFinished\") {\n      chrome.debugger.sendCommand(\n        { tabId: source.tabId },\n        \"Network.getResponseBody\",\n        { requestId: params.requestId },\n        ({ body, base64Encoded }: any) => {\n          const response = responseMap.get(params.requestId);\n          const responseBody = base64Encoded ? atob(body) : body;\n          broker.dispatchMessage(\n            \"NETWORK_RESPONSE\",\n            {\n              url: response?.url,\n              body: responseBody,\n            },\n            \"-1\"\n          );\n          responseMap.delete(params.requestId);\n        }\n      );\n    }\n  }\n\n  chrome.debugger.onEvent.addListener(onRequestWillBeSent);\n  chrome.debugger.onEvent.addListener(onResponseReceived);\n  chrome.debugger.onEvent.addListener(onLoadingFinished);\n\n  chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    const tabId = sender.tab?.id;\n    function enableNetwork() {\n      chrome.debugger.sendCommand({ tabId: tabId }, \"Network.enable\");\n    }\n\n    function attachDebugger() {\n      chrome.debugger.attach({ tabId: tabId }, \"1.2\", enableNetwork);\n    }\n\n    function detachDebugger() {\n      chrome.debugger.detach({ tabId: tabId });\n    }\n    if (message.action === \"inspectNetwork\") {\n      // Attach the debugger to the tab\n      attachDebugger();\n      sendResponse({ tabId: tabId });\n    } else if (message.action === \"stopInspectNetwork\") {\n      detachDebugger();\n      sendResponse({ tabId: tabId });\n    }\n  });\n}\n"],"names":[],"sourceRoot":""}