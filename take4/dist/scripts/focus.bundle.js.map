{"version":3,"file":"scripts/focus.bundle.js","mappings":"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","sources":["webpack://chrome-extension-boilerplate/./src/client.ts","webpack://chrome-extension-boilerplate/webpack/bootstrap","webpack://chrome-extension-boilerplate/webpack/runtime/define property getters","webpack://chrome-extension-boilerplate/webpack/runtime/hasOwnProperty shorthand","webpack://chrome-extension-boilerplate/webpack/runtime/make namespace object","webpack://chrome-extension-boilerplate/./src/scripts/focus/index.ts"],"sourcesContent":["import { BrokerEvent, EventCallback } from \"./types\";\n\nexport class BrokerClient<T extends string, P> {\n  port: chrome.runtime.Port;\n  eventListeners: Map<string, Set<EventCallback<T, P>>>;\n\n  constructor() {\n    this.port = chrome.runtime.connect({ name: `${Math.random()}` });\n    this.eventListeners = new Map();\n    this.port.onMessage.addListener(this.handleMessage.bind(this));\n  }\n\n  handleMessage(event: BrokerEvent<T, P>): void {\n    // Process non-wildcard events\n    if (event.type !== \"*\") {\n      const callbacks = this.eventListeners.get(event.type);\n      if (callbacks) {\n        for (const callback of callbacks) {\n          callback(event);\n        }\n      }\n    }\n\n    // Process wildcard events\n    const wildcardCallbacks = this.eventListeners.get(\"*\");\n    if (wildcardCallbacks) {\n      for (const callback of wildcardCallbacks) {\n        callback(event);\n      }\n    }\n  }\n\n  connect(): void {\n    this.port.postMessage({ type: \"SUBSCRIBE\", payload: \"*\" });\n  }\n\n  disconnect(): void {\n    this.port.postMessage({ type: \"UNSUBSCRIBE\", payload: \"*\" });\n    this.port.disconnect();\n  }\n\n  on(eventType: string, callback: EventCallback<T, P>): void {\n    if (!this.eventListeners.has(eventType)) {\n      this.eventListeners.set(eventType, new Set());\n    }\n    this.eventListeners.get(eventType)?.add(callback);\n    this.port.postMessage({ type: \"SUBSCRIBE\", payload: eventType });\n  }\n\n  off(eventType: string, callback: EventCallback<T, P>): void {\n    const callbacks = this.eventListeners.get(eventType);\n    if (callbacks) {\n      callbacks.delete(callback);\n      if (callbacks.size === 0) {\n        this.port.postMessage({ type: \"UNSUBSCRIBE\", payload: eventType });\n      }\n    }\n  }\n\n  dispatch(event: BrokerEvent<T, P>): void {\n    this.port.postMessage(event);\n  }\n}\n\nexport default BrokerClient;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BrokerClient } from \"../../client\";\n\nexport type FocusEventTypes = \"scroll\" | \"visibilitychange\";\n\nexport type ScrollEvent = {\n  scrollPosition: number;\n};\n\nexport type VisibilityChangeEvent = {\n  visible: boolean;\n};\n\nexport type FocusEventPayload = ScrollEvent | VisibilityChangeEvent;\n\nconst client = new BrokerClient<FocusEventTypes, FocusEventPayload>();\n\nconst debounce = (func: () => void, wait: number) => {\n  let timeout: NodeJS.Timeout;\n  return function () {\n    clearTimeout(timeout);\n    timeout = setTimeout(func, wait);\n  };\n};\n\nconst handleVisibilityChange = () => {\n  if (document.visibilityState === \"visible\") {\n    client.dispatch({\n      type: \"visibilitychange\",\n      payload: { visible: true },\n    });\n  }\n};\n\nconst handleScroll = debounce(() => {\n  const scrollPosition = window.scrollY;\n  client.dispatch({\n    type: \"scroll\",\n    payload: { scrollPosition },\n  });\n}, 100);\n\ndocument.addEventListener(\"visibilitychange\", handleVisibilityChange);\nwindow.addEventListener(\"scroll\", handleScroll);\n\n// Remember to remove event listeners and disconnect the client when appropriate\n// For example, you could add the following function:\nconst cleanup = () => {\n  document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  window.removeEventListener(\"scroll\", handleScroll);\n  client.disconnect();\n};\n\n// Call cleanup() when you need to remove the listeners and disconnect the client\n"],"names":[],"sourceRoot":""}